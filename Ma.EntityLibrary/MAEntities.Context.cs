//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ma.EntityLibrary
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MAEntities : DbContext
    {
        public MAEntities()
            : base("name=MAEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tb_Answer> tb_Answer { get; set; }
        public virtual DbSet<tb_AnswerDummy> tb_AnswerDummy { get; set; }
        public virtual DbSet<tb_AnswerType> tb_AnswerType { get; set; }
        public virtual DbSet<tb_AnswerView> tb_AnswerView { get; set; }
        public virtual DbSet<tb_AppRedeemPoints> tb_AppRedeemPoints { get; set; }
        public virtual DbSet<tb_Assessment> tb_Assessment { get; set; }
        public virtual DbSet<tb_AssessmentAnswer> tb_AssessmentAnswer { get; set; }
        public virtual DbSet<tb_AssessmentAttempt> tb_AssessmentAttempt { get; set; }
        public virtual DbSet<tb_AssessmentFile> tb_AssessmentFile { get; set; }
        public virtual DbSet<tb_AssessmentQuestion> tb_AssessmentQuestion { get; set; }
        public virtual DbSet<tb_CbseAnswer> tb_CbseAnswer { get; set; }
        public virtual DbSet<tb_CbseFile> tb_CbseFile { get; set; }
        public virtual DbSet<tb_CbseQuestion> tb_CbseQuestion { get; set; }
        public virtual DbSet<tb_Challenge> tb_Challenge { get; set; }
        public virtual DbSet<tb_Chapter> tb_Chapter { get; set; }
        public virtual DbSet<tb_ChapterDummy> tb_ChapterDummy { get; set; }
        public virtual DbSet<tb_Class> tb_Class { get; set; }
        public virtual DbSet<tb_ClassStudent> tb_ClassStudent { get; set; }
        public virtual DbSet<tb_CommonPassword> tb_CommonPassword { get; set; }
        public virtual DbSet<tb_ContactExpert> tb_ContactExpert { get; set; }
        public virtual DbSet<tb_ContactUs> tb_ContactUs { get; set; }
        public virtual DbSet<tb_Course> tb_Course { get; set; }
        public virtual DbSet<tb_Division> tb_Division { get; set; }
        public virtual DbSet<tb_DivisionStudent> tb_DivisionStudent { get; set; }
        public virtual DbSet<tb_ErrorLog> tb_ErrorLog { get; set; }
        public virtual DbSet<tb_Exam> tb_Exam { get; set; }
        public virtual DbSet<tb_ExamGroup> tb_ExamGroup { get; set; }
        public virtual DbSet<tb_ExamQuestion> tb_ExamQuestion { get; set; }
        public virtual DbSet<tb_ExamRank> tb_ExamRank { get; set; }
        public virtual DbSet<tb_ExamRequest> tb_ExamRequest { get; set; }
        public virtual DbSet<tb_Exercise> tb_Exercise { get; set; }
        public virtual DbSet<tb_File> tb_File { get; set; }
        public virtual DbSet<tb_FileDummy> tb_FileDummy { get; set; }
        public virtual DbSet<tb_Group> tb_Group { get; set; }
        public virtual DbSet<tb_GroupStudent> tb_GroupStudent { get; set; }
        public virtual DbSet<tb_Homework> tb_Homework { get; set; }
        public virtual DbSet<tb_HomeworkSchool> tb_HomeworkSchool { get; set; }
        public virtual DbSet<tb_HomeworkStudent> tb_HomeworkStudent { get; set; }
        public virtual DbSet<tb_HomeworkStudentSchool> tb_HomeworkStudentSchool { get; set; }
        public virtual DbSet<tb_Increment> tb_Increment { get; set; }
        public virtual DbSet<tb_Ipayy> tb_Ipayy { get; set; }
        public virtual DbSet<tb_Lesson> tb_Lesson { get; set; }
        public virtual DbSet<tb_Level> tb_Level { get; set; }
        public virtual DbSet<tb_Login> tb_Login { get; set; }
        public virtual DbSet<tb_Mark> tb_Mark { get; set; }
        public virtual DbSet<tb_MpesePayment> tb_MpesePayment { get; set; }
        public virtual DbSet<tb_News> tb_News { get; set; }
        public virtual DbSet<tb_Notification> tb_Notification { get; set; }
        public virtual DbSet<tb_NotificationUser> tb_NotificationUser { get; set; }
        public virtual DbSet<tb_Olympiad> tb_Olympiad { get; set; }
        public virtual DbSet<tb_OlympiadAnswer> tb_OlympiadAnswer { get; set; }
        public virtual DbSet<tb_OlympiadAttempt> tb_OlympiadAttempt { get; set; }
        public virtual DbSet<tb_OlympiadChapter> tb_OlympiadChapter { get; set; }
        public virtual DbSet<tb_OlympiadFile> tb_OlympiadFile { get; set; }
        public virtual DbSet<tb_OlympiadQuestion> tb_OlympiadQuestion { get; set; }
        public virtual DbSet<tb_OlympiadTest> tb_OlympiadTest { get; set; }
        public virtual DbSet<tb_Package> tb_Package { get; set; }
        public virtual DbSet<tb_PasswordReset> tb_PasswordReset { get; set; }
        public virtual DbSet<tb_PayByCash> tb_PayByCash { get; set; }
        public virtual DbSet<tb_Payment> tb_Payment { get; set; }
        public virtual DbSet<tb_PaymentTest> tb_PaymentTest { get; set; }
        public virtual DbSet<tb_PAYTM_REQUEST> tb_PAYTM_REQUEST { get; set; }
        public virtual DbSet<tb_PAYTM_RESPONSE> tb_PAYTM_RESPONSE { get; set; }
        public virtual DbSet<tb_Points> tb_Points { get; set; }
        public virtual DbSet<tb_PracticeAttempt> tb_PracticeAttempt { get; set; }
        public virtual DbSet<tb_PracticePoint> tb_PracticePoint { get; set; }
        public virtual DbSet<tb_PracticePointDetails> tb_PracticePointDetails { get; set; }
        public virtual DbSet<tb_PracticeReward> tb_PracticeReward { get; set; }
        public virtual DbSet<tb_PracticeTest> tb_PracticeTest { get; set; }
        public virtual DbSet<tb_PracticeTestDummy> tb_PracticeTestDummy { get; set; }
        public virtual DbSet<tb_Preparation> tb_Preparation { get; set; }
        public virtual DbSet<tb_PromoCode> tb_PromoCode { get; set; }
        public virtual DbSet<tb_Question> tb_Question { get; set; }
        public virtual DbSet<tb_QuestionDummy> tb_QuestionDummy { get; set; }
        public virtual DbSet<tb_QuestionType> tb_QuestionType { get; set; }
        public virtual DbSet<tb_RedeemPoints> tb_RedeemPoints { get; set; }
        public virtual DbSet<tb_ReferFriend> tb_ReferFriend { get; set; }
        public virtual DbSet<tb_Reward> tb_Reward { get; set; }
        public virtual DbSet<tb_Scholarship> tb_Scholarship { get; set; }
        public virtual DbSet<tb_ScholarshipAnswer> tb_ScholarshipAnswer { get; set; }
        public virtual DbSet<tb_ScholarshipAttempt> tb_ScholarshipAttempt { get; set; }
        public virtual DbSet<tb_ScholarshipFile> tb_ScholarshipFile { get; set; }
        public virtual DbSet<tb_ScholarshipQuestion> tb_ScholarshipQuestion { get; set; }
        public virtual DbSet<tb_ScholarshipQuestionTest> tb_ScholarshipQuestionTest { get; set; }
        public virtual DbSet<tb_School> tb_School { get; set; }
        public virtual DbSet<tb_SchoolRating> tb_SchoolRating { get; set; }
        public virtual DbSet<tb_ScoreRange> tb_ScoreRange { get; set; }
        public virtual DbSet<tb_State> tb_State { get; set; }
        public virtual DbSet<tb_Subject> tb_Subject { get; set; }
        public virtual DbSet<tb_SubjectExpertSubject> tb_SubjectExpertSubject { get; set; }
        public virtual DbSet<tb_Subjects> tb_Subjects { get; set; }
        public virtual DbSet<tb_Subtopic> tb_Subtopic { get; set; }
        public virtual DbSet<tb_TeacherSubject> tb_TeacherSubject { get; set; }
        public virtual DbSet<tb_Topic> tb_Topic { get; set; }
        public virtual DbSet<tb_UnlockedLevel> tb_UnlockedLevel { get; set; }
        public virtual DbSet<tb_UrlFile> tb_UrlFile { get; set; }
        public virtual DbSet<tb_UserAssessmentAttend> tb_UserAssessmentAttend { get; set; }
        public virtual DbSet<tb_UserAttend> tb_UserAttend { get; set; }
        public virtual DbSet<tb_UserExamAttend> tb_UserExamAttend { get; set; }
        public virtual DbSet<tb_UserLog> tb_UserLog { get; set; }
        public virtual DbSet<tb_UserOlympiadAttend> tb_UserOlympiadAttend { get; set; }
        public virtual DbSet<tb_UserPreparationAttend> tb_UserPreparationAttend { get; set; }
        public virtual DbSet<tb_UserPreparationResult> tb_UserPreparationResult { get; set; }
        public virtual DbSet<tb_VideoFiles> tb_VideoFiles { get; set; }
        public virtual DbSet<UserExamResult> UserExamResults { get; set; }
        public virtual DbSet<tb_FileTest> tb_FileTest { get; set; }
        public virtual DbSet<tb_ScholarshipAnswerTest> tb_ScholarshipAnswerTest { get; set; }
        public virtual DbSet<View_ExamStudentResult> View_ExamStudentResult { get; set; }
    
        public virtual ObjectResult<sp_GetRewardPointDeatils_Result> sp_GetRewardPointDeatils(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetRewardPointDeatils_Result>("sp_GetRewardPointDeatils", userIdParameter);
        }
    
        public virtual ObjectResult<sp_GetRewardPointDeatils1_Result> sp_GetRewardPointDeatils1(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetRewardPointDeatils1_Result>("sp_GetRewardPointDeatils1", userIdParameter);
        }
    
        public virtual ObjectResult<sp_QtnFileUpload_Result> sp_QtnFileUpload(Nullable<long> questionid, string question, Nullable<long> levelid, string explanation, string answer, Nullable<int> rightstatus)
        {
            var questionidParameter = questionid.HasValue ?
                new ObjectParameter("questionid", questionid) :
                new ObjectParameter("questionid", typeof(long));
    
            var questionParameter = question != null ?
                new ObjectParameter("question", question) :
                new ObjectParameter("question", typeof(string));
    
            var levelidParameter = levelid.HasValue ?
                new ObjectParameter("levelid", levelid) :
                new ObjectParameter("levelid", typeof(long));
    
            var explanationParameter = explanation != null ?
                new ObjectParameter("explanation", explanation) :
                new ObjectParameter("explanation", typeof(string));
    
            var answerParameter = answer != null ?
                new ObjectParameter("answer", answer) :
                new ObjectParameter("answer", typeof(string));
    
            var rightstatusParameter = rightstatus.HasValue ?
                new ObjectParameter("rightstatus", rightstatus) :
                new ObjectParameter("rightstatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_QtnFileUpload_Result>("sp_QtnFileUpload", questionidParameter, questionParameter, levelidParameter, explanationParameter, answerParameter, rightstatusParameter);
        }
    
        public virtual int QuestionExcelUpload(Nullable<long> questionid, string question, Nullable<long> levelid, string explanation, string answer, Nullable<int> rightstatus)
        {
            var questionidParameter = questionid.HasValue ?
                new ObjectParameter("questionid", questionid) :
                new ObjectParameter("questionid", typeof(long));
    
            var questionParameter = question != null ?
                new ObjectParameter("question", question) :
                new ObjectParameter("question", typeof(string));
    
            var levelidParameter = levelid.HasValue ?
                new ObjectParameter("levelid", levelid) :
                new ObjectParameter("levelid", typeof(long));
    
            var explanationParameter = explanation != null ?
                new ObjectParameter("explanation", explanation) :
                new ObjectParameter("explanation", typeof(string));
    
            var answerParameter = answer != null ?
                new ObjectParameter("answer", answer) :
                new ObjectParameter("answer", typeof(string));
    
            var rightstatusParameter = rightstatus.HasValue ?
                new ObjectParameter("rightstatus", rightstatus) :
                new ObjectParameter("rightstatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("QuestionExcelUpload", questionidParameter, questionParameter, levelidParameter, explanationParameter, answerParameter, rightstatusParameter);
        }
    
        public virtual ObjectResult<sp_QuestionExcelUpload_Result> sp_QuestionExcelUpload(Nullable<long> questionid, string question, Nullable<long> levelid, string explanation, string answer, Nullable<int> rightstatus)
        {
            var questionidParameter = questionid.HasValue ?
                new ObjectParameter("questionid", questionid) :
                new ObjectParameter("questionid", typeof(long));
    
            var questionParameter = question != null ?
                new ObjectParameter("question", question) :
                new ObjectParameter("question", typeof(string));
    
            var levelidParameter = levelid.HasValue ?
                new ObjectParameter("levelid", levelid) :
                new ObjectParameter("levelid", typeof(long));
    
            var explanationParameter = explanation != null ?
                new ObjectParameter("explanation", explanation) :
                new ObjectParameter("explanation", typeof(string));
    
            var answerParameter = answer != null ?
                new ObjectParameter("answer", answer) :
                new ObjectParameter("answer", typeof(string));
    
            var rightstatusParameter = rightstatus.HasValue ?
                new ObjectParameter("rightstatus", rightstatus) :
                new ObjectParameter("rightstatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_QuestionExcelUpload_Result>("sp_QuestionExcelUpload", questionidParameter, questionParameter, levelidParameter, explanationParameter, answerParameter, rightstatusParameter);
        }
    
        public virtual int PR_expires_Payment(Nullable<long> uSERID)
        {
            var uSERIDParameter = uSERID.HasValue ?
                new ObjectParameter("USERID", uSERID) :
                new ObjectParameter("USERID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_expires_Payment", uSERIDParameter);
        }
    
        [DbFunction("MAEntities", "fn_GetExamDetails")]
        public virtual IQueryable<fn_GetExamDetails_Result> fn_GetExamDetails(Nullable<long> examId)
        {
            var examIdParameter = examId.HasValue ?
                new ObjectParameter("ExamId", examId) :
                new ObjectParameter("ExamId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetExamDetails_Result>("[MAEntities].[fn_GetExamDetails](@ExamId)", examIdParameter);
        }
    
        public virtual ObjectResult<sp_GetUserResults_Result> sp_GetUserResults(Nullable<long> examId)
        {
            var examIdParameter = examId.HasValue ?
                new ObjectParameter("ExamId", examId) :
                new ObjectParameter("ExamId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetUserResults_Result>("sp_GetUserResults", examIdParameter);
        }
    
        public virtual ObjectResult<sp_GetUserResultsNew_Result> sp_GetUserResultsNew(Nullable<long> examId)
        {
            var examIdParameter = examId.HasValue ?
                new ObjectParameter("ExamId", examId) :
                new ObjectParameter("ExamId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetUserResultsNew_Result>("sp_GetUserResultsNew", examIdParameter);
        }
    }
}
