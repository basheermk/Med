
@model Medacademy.Models.SubTopicModel
@{
//ViewBag.Title = "AddSubTopic";
//Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="modal-dialog modal-md">
    <div class="modal-content" style="border-radius: 3px;">

        <div class="modal-header">
            Edit SubTopic<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        </div>  

        <style>
        .popup_edit {
    padding: 0 15px;
}

    </style>

        <section class="addpackage">
            @using (Ajax.BeginForm("AddSubTopics", "Admin", null, new AjaxOptions
            {
                HttpMethod = "POST",
                OnSuccess = "SubTopicAddSuccess",
                OnFailure = "SubTopicAddFailed",
            }, new { id = "form-login" }))
            {
                @Html.TextBoxFor(m => m.Pdfpath, new { value = "", type = "hidden" })
                @Html.TextBoxFor(m => m.Videopath, new { value = "", type = "hidden" })
                @Html.TextBoxFor(m => m.extension, new { value = "", type = "hidden" })

                //Basheer

                @Html.TextBoxFor(m => m.SubjectID, new { id = "sbjId", type = "hidden" })
                @Html.TextBoxFor(m => m.TopicID, new { id = "topId", type = "hidden" })
                @Html.TextBoxFor(m => m.PackageID, new { id = "pkgId", type = "hidden" })
                <div class="popup_edit">
                    <div class="col-12">
                        <div class="package_heading">
                            <h3>Add Topic</h3>
                        </div>
                        <form>
                            <div class="form-group row">
                                <label class="col-sm-2 col-form-label">Subject</label>
                                <div class="col-sm-8">
                                   @* @Html.DropDownListFor(m => m.TopicID, Ma.EntityLibrary.Data.Dropdowndata.GetTopicDrop(), "--Choose--", new { @class = "form-control pv_class-drop-down", @data_live_search = "true", name = "subtopicDropdown", id = "subtopicDataDropdown" })*@
                                   @{
                                    <select class="form-control pv_class-drop-down" id = "subtopicDataDropdown" >
                                        <option>--Choose--</option>
                                        @foreach (var a1 in Model.SelectListItems)
                                        {
                                            if (Model.TopicID == Convert.ToInt64(a1.Value))
                                            {
                                                <option id="@a1.Value" selected>@a1.Text</option>
                                            }
                                            else
                                            {
                                                <option id="@a1.Value">@a1.Text</option>
                                            }

                                        }
                                        
                                    </select>
                                    }
                                    
                                     @Html.ValidationMessageFor(m => m.TopicID)
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-2 col-form-label">Name</label>
                                <div class="col-sm-8">
                                    @Html.TextBoxFor(m => m.SubTopicName, new { @class = "form-control", placeholder = "Subtopic Name" })
                                    @Html.ValidationMessageFor(m => m.SubTopicName)
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-2 col-form-label">Upload PDF</label>
                                <div class="col-sm-8">

                                    <input id="subtopic-pdf-upload" type="file" class="uploder-controler" value="@Model.Pdfpath" />
                                </div>
                            </div>

                            <div class="form-group row">
                                <label class="col-sm-2 col-form-label">Upload Video</label>

                                <div class="col-sm-8">
                                    @*<div class="jumbotron">*@
                                    @*..............................................................................*@



                                    <style type="text/css">
                                         .video-frame {
                                             width: 100%;
                                             border: 4px solid #dc3545;
                                             box-shadow: 1px 2px 3px #dc3545;
                                             border-radius: 3px;
                                         }

                                         .title {
                                             font-weight: 500;
                                             font-size: 14px;
                                             text-align: center;
                                             margin-bottom: 10px;
                                             margin-top: 10px;
                                             background-color: #dc3545;
                                             color: white;
                                             box-shadow: 1px 2px 4px #dc3545;
                                         }

                                         .remove_btn {
                                             margin: 10px auto;
                                             text-align: center;
                                         }
                                    </style>



                                    <button type="button" class="btn btn-success rounded-0" data-toggle="modal" data-target="#UploadVideo">
                                        <i class="fa fa-plus-circle"></i> Add New
                                    </button>

                                    @{

                                        if (Model.SubTopicModel_List != null)
                                        {
                                            if (Model.SubTopicModel_List.Count != 0)
                                            {
                                                foreach (var item in Model.SubTopicModel_List)
                                                {
                                                    if (item.ID != 0)
                                                    {
                                                        <div class="">

                                                            <div class="title">@item.Name</div>
                                                            <div class="video-frame">
                                                                <video style="width:100%; height:100%;" controls>
                                                                    <source src="@Url.Content(@item.FilePath)" type="video/mp4" />
                                                                </video>

                                                            </div>
                                                            <div class="remove_btn">

                                                                <button type="button" id="@item.ID" class="btn btn-danger btn_class_Remove">Remove</button>

                                                            </div>
                                                        </div>
                                                    }

                                                }
                                            }


                                        }


                                    }






                                    @*..............................................................................*@

                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-2 col-form-label">&nbsp;</label>
                                <div class="col-sm-8">

                                    <button type="submit" id="btn_saveSubmit" class="btn btn-success">Save</button>
                                    <button type="button" class="btn btn-danger" onclick="CloseSubTopic()">Close</button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
                                        }
        </section>

        <div class="row">

            <div class="modal fade" id="UploadVideo">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h4 class="modal-title">Upload New video File</h4>
                            <button type="button" class="close" data-dismiss="modal">×</button>
                        </div>
                        <div class="modal-body">
                            @using (Html.BeginForm("UploadVideo", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
                            {

                                //{
                                <div class="form-group">
                                    <label>Choose File:</label>
                                    <div class="input-group">
                                        <div class="custom-file">
                                            <input type="file" id="fileupload" name="fileupload" class="custom-file-input" />
                                            <label class="custom-file-label"></label>
                                        </div>
                                        <div class="input-group-append">
                                            <input type="submit" id="btnUpload" class="btn btn-secondary" value="Upload" />
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <script>

//using (Ajax.BeginForm("UploadVideo", "Admin", null, new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "AjaxUpdatePanel" }, new { enctype = "multipart/form-data", id = "frmUploader" }))

    //window.addEventListener("submit", function (e) {
    //    var form = e.target;
    //    if (form.getAttribute("enctype") === "multipart/form-data") {
    //        if (form.dataset.ajax) {
    //            e.preventDefault();
    //            e.stopImmediatePropagation();
    //            var xhr = new XMLHttpRequest();
    //            xhr.open(form.method, form.action);
    //            xhr.onreadystatechange = function () {
    //                if (xhr.readyState == 4 && xhr.status == 200) {
    //                    if (form.dataset.ajaxUpdate) {
    //                        var updateTarget = document.querySelector(form.dataset.ajaxUpdate);
    //                        if (updateTarget) {
    //                            updateTarget.innerHTML = xhr.responseText;
    //                        }
    //                    }
    //                }
    //            };
    //            xhr.send(new FormData(form));
    //        }
    //    }
    //}, true);

    //$("#btn_saveSubmit").click(function () {
    //    $("#btn_saveSubmit").attr("disabled", true);
    //    var explode = function () {
    //        location.reload();
    //    };
    //    setTimeout(explode, 3000);
    //});


    $(".btn_class_Remove").click(function () {

        var id = $(this).attr('id');
        var datas = new Object();
        datas.ID = id;

        swal({
            title: "Are you sure?",
            text: "You will not be able to recover this imaginary file!",
            type: "warning",
            showCancelButton: true,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Yes, delete it!",
            cancelButtonText: "No, cancel plx!",
            closeOnConfirm: false,
            closeOnCancel: false
        },
            function (isConfirm) {
                if (isConfirm) {

                    $.ajax({
                        type: "POST",
                        url: "/Admin/RemoveVideoFiles",
                        data: JSON.stringify(datas),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            swal("Deleted!", response, "success");
                            var explode = function () {
                                location.reload();
                            };
                            setTimeout(explode, 3000);

                        },
                        failure: function (response) {
                           // alert(response.responseText);
                        },
                        error: function (response) {
                            //alert(response.responseText);
                        }
                    });


                } else {
                    swal("Cancelled", "Your imaginary file is safe :)", "error");
                }
            });




    });

    $(function () {
        $('#file').on('#change', function () {
            var file = this.files[0];
            var reader = new FileReader();
            reader.onload = viewer.load;
            reader.readAsDataURL(file);
            viewer.setProperties(file);
        });

        var viewer = {
            load: function (e) {
                $("#preview").attr('src',e.target.result);
            },
            setProperties: function(file) {
                //$('#filename').text(file.name);
                //$('#filetype').text(file.type);
                //$('#filessize').text(Math.round(file.size/1024));
            }

        }

    })

    function refreshSubTopicGrid() {
        $.ajax({
            url: '/Admin/RefreshSubTopic',
            dataType: 'html',
            success: function (data) {
                $('#class-list-view').html(data);
                IntializeDataTable();
            },
        });
    }

    function IntializeDataTable() {
        $('#classTable').DataTable({
            "paging": true,
            "lengthChange": false,
            "searching": true,
            "ordering": true,
            "info": true,
            "autoWidth": true
        });
    }
    function SubTopicAddSuccess(result) {
        if (result.status) {
            toastrSuccess(result.msg);
            refreshSubTopicGrid();
        }
        else {
            toastrError(result.msg);
        }
    }
    function SubTopicAddFailed() {
        toastrError('Topic Adding Failed');
    }



    function CloseSubTopic() {
        window.location.href = '/Admin/SubTopic/';
    }

    $(document).on('change', '#subtopic-pdf-upload', function () {
        //debugger;
        var source = $(this);
        var selectedFile = this.files[0];
        var input = this;
        if (input.files && input.files[0]) {
            var url = input.value;
            var ext = url.substring(url.lastIndexOf('.') + 1).toLowerCase();
            if (ext == "pdf") {
                selectedFile.convertToBase64(function (base64) {
                   // $('#package-img-preview').attr({ "src": base64, "class": "useruploder" });
                    $('#Pdfpath').val(base64);
                });
                var reader = new FileReader();
            }
            else {
                $(source).val('');
                toastrWarning('Invalid Filetype');
            }
        }
    });
    File.prototype.convertToBase64 = function (callback) {
        var FR = new FileReader();
        FR.onload = function (e) {
            callback(e.target.result)
        };
        FR.readAsDataURL(this);
    }
    //$(document).on('change', '#subtopic-video-upload', function () {
    //    debugger;
    //    var source = $(this);
    //    var selectedFile = this.files[0];
    //    var input = this;
    //    if (input.files && input.files[0]) {
    //        var url = input.value;
    //        var ext = url.substring(url.lastIndexOf('.') + 1).toLowerCase();
    //        if (ext == "avi" || ext == "flv" || ext == "mkv" || ext == "mp4" || ext == "mov" || ext == "wmv" || ext == "mpeg4") {
    //            selectedFile.convertToBase64(function (base64) {
    //               //$('#package-video-preview').attr({ "src": base64, "class": "useruploder" });
    //                $('#Videopath').val(base64);
    //                $('#extension').val(ext);
    //            });
    //            var reader = new FileReader();
    //        }
    //        else {
    //            $(source).val('');
    //            toastrWarning('Invalid Filetype');
    //        }
    //    }
    //});

        </script>






    </div> 
</div> 
<script>
    function TopicEditSuccess(result) {
        if (result.status) {
            $('#editTopic').modal('hide');
            toastrSuccess(result.msg);
            refreshTopicGrid();
        }
        else {
            toastrError(result.msg);
        }
    }
    function TopicEditFailed() {
        toastrError('Topic Editing Failed');
    }

</script>



